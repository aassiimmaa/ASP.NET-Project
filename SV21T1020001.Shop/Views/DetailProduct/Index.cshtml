@model Product;
@{
    var listPhoto = SV21T1020001.BusinessLayers.ProductDataService.ListPhotos(Model.ProductID);
    var listAttribute = SV21T1020001.BusinessLayers.ProductDataService.ListAttributes(Model.ProductID);
}
<style>
    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product_infomation{
        border: solid 1px #ccc;
        border-radius: 4px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        min-height: 720px;
        padding: 24px 32px;
    }
    .product-title {
        font-size: 28px;
        font-weight: bold;
        margin-bottom: 15px;
    }
    .product-price {
        font-size: 24px;
        font-weight: bold;
        color: red;
        margin-bottom: 15px;
    }
    .product-description {
        margin: 24px 0;
    }
    .product-quantity {
        width: 100px;
    }
    .add-to-cart-btn {
        background-color: #3D8DBC;
        color: white;
        border-radius: 5px;
        padding: 10px 20px;
        text-transform: uppercase;
        font-weight: bold;
        margin-top: 32px;
        border: none;
    }
    .add-to-cart-btn:hover {
        background-color: #0056b3;
    }
    .childPhotos{
        display: flex;
        margin-top: 12px;
    }
    .specification{
        margin: 24px 0;
    }

    .specification li {
        font-size: 16px;
    }

    .main-img{
        width: 100%;
        height: 100%;
        object-fit: contain;
    }

    .toast{
        position: fixed;
        top: 120px;
        right: -40px;
        padding: 10px;
        color: #fff;
        margin-bottom: 10px;
        width: 400px;
        display: grid;
        grid-template-columns: 70px 1fr 70px;
        border-radius: 5px;
        --color: #0abf30;
        background-image: 
            linear-gradient(
                to right, #0abf3055, #22242f 30%
            ); 
        animation: show 0.3s linear 1 forwards  
    }
    .toast i{
        color: var(--color);
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: x-large;
    }
    .toast .title{
        font-size: x-large;
        font-weight: bold;
    }
    .toast span, .toast i:nth-child(3){
        color: #fff;
        opacity: 0.6;
    }
    @@keyframes show{
        0%{
            transform: translateX(100%);
        }
        40%{
            transform: translateX(-5%);
        }
        80%{
            transform: translateX(0%);
        }
        100%{
            transform: translateX(-10%);
        }
    }
    .toast::before{
        position: absolute;
        bottom: 0;
        left: 0;
        background-color: var(--color);
        width: 100%;
        height: 3px;
        content: '';
        box-shadow: 0 0 10px var(--color);
        animation: timeOut 3s linear 1 forwards
    }
    @@keyframes timeOut{
        to{
            width: 0;
        }
    }

</style>

<div style="padding: 0" class="container product-detail">
    <div class="row">
        <div class="col-md-5">
            <div style="width: 600px; height: 600px; border-radius: 4px; overflow: hidden">
                <img class="main-img" src="@(string.IsNullOrEmpty(Model.Photo) ? Url.Content("~/images/product/nophoto.jpg") : Url.Content($"~/images/product/{Model.Photo}"))" class="card-img-top" alt="@Model.ProductName">
            </div>
            @if (listPhoto.Count > 0)
            {
                <div class="childPhotos" style="width: 600px; height: 100px">
                    @foreach (var photo in listPhoto)
                    {
                        <img style="width: 100px; height: 100px; margin-right: 12px" src=@Url.Content($"~/images/product/{photo.Photo}") alt="Sản phẩm" class="product-image">
                    }
                    @{
                        // <div style="border: solid 4px red; width: 100px; margin-right: 12px;">
                        //      <img style="width: 100%; height: 100%;" src="~/images/pic_1.webp" alt="Sản phẩm" class="product-image">   
                        //  </div>
                        //  <img style="width: 100px; height: 100px; margin-right: 12px" src="~/images/pic_1.webp" alt="Sản phẩm" class="product-image">
                    }
                </div>
            }
        </div>
        <div class="col-md-7 product_infomation">
            <h1 class="product-title">@Model.ProductName</h1>
            <div class="product-price">@Model.Price.ToString("N0") đ</div>

            <hr />

            <div class="product-description">
                <h4 style="font-weight: bold; ">Mô tả sản phẩm</h4>
                @if (string.IsNullOrEmpty(Model.ProductDescription))
                {
                    <p style="font-size: 16px; color: #898989">Chưa có mô tả nào.</p>
                }else{
                    <p style="font-size: 16px">@Model.ProductDescription</p>
                }
            </div>

            <hr />

            <div class="specification">
                <h4 style="font-weight: bold; ">Thông số kỹ thuật</h4>
                <ul style="list-style: none;">
                    @if (listAttribute.Count > 0)
                    {
                        @foreach (var attr in listAttribute)
                        {
                            <li>
                                @attr.AttributeName: @attr.AttributeValue
                            </li>
                        }
                    }else{
                        <li style="color: #898989">Chưa có thông số kỹ thuật nào.</li>
                    }
                </ul>
            </div>

            <hr />

            <div class="notifications"></div>

            <form action="~/Order/AddToCart" method="post">
                <input type="hidden" name="ProductID" value="@Model.ProductID" />
                <input type="hidden" name="ProductName" value="@Model.ProductName" />
                <input type="hidden" name="Photo" value="@Model.Photo" />
                <input type="hidden" name="SalePrice" value="@Model.Price" />

                <div class="quantity-section mt-3">
                    <label style="font-size: 18px" for="quantity">Số lượng:</label>
                    <input type="number" id="quantity" name="Quantity" class="form-control product-quantity" value="1" min="1" max="10">
                </div>

                <button id="add_btn" type="submit" class="add-to-cart-btn mt-4">Thêm vào giỏ hàng</button>
            </form>
        </div>
    </div>
</div>

<script>
    let notifications = document.querySelector('.notifications');
    let add_btn = document.getElementById('add_btn');

    function createToast(type, icon, title, text) {
        let newToast = document.createElement('div');
        newToast.innerHTML = `
                <div class="toast ${type}">
                    <i class="${icon}"></i>
                    <div class="content">
                        <div class="title">${title}</div>
                        <span>${text}</span>
                    </div>
                    <i class="bi-solid bi-xmark" onclick="(this.parentElement).remove()"></i>
                </div>`;
        notifications.appendChild(newToast);
        newToast.timeOut = setTimeout(() => newToast.remove(), 3000);
    }

    var message = '@TempData["Message"]';
    if (message) {
        let type = 'success';
        let icon = 'bi bi-check-circle';
        let title = 'Thành công';
        let text = 'Sản phẩm đã được thêm vào giỏ hàng!';
        createToast(type, icon, title, text);
    }
</script>